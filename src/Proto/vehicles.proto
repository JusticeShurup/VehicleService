syntax = "proto3";

option csharp_namespace = "ProtosContract";
import "google/api/annotations.proto";

package vehicles;

service Vehicles {
	rpc CreateVehicle(CreateVehicleRq) returns (CreateVehicleRs) {
		option (google.api.http) = {
			post: "/api/v1/Vehicles/CreateVehicle";
		};
	}
	rpc GetVehicle(GetVehicleRq) returns (GetVehicleRs) {
		option (google.api.http) = {
			get: "/api/v1/Vehicles/GetVehicle";
		};
	}
	rpc GetAllVehicles(GetAllVehiclesRq) returns (GetAllVehiclesRs) {
		option (google.api.http) = {
			get: "/api/v1/Vehicles/GetAllVehicles";
		};
	}
	rpc DeleteVehicle(DeleteVehicleRq) returns (DeleteVehicleRs) {
		option (google.api.http) = {
			delete: "/api/v1/Vehicles/DeleteVehicle";
		};
	}
}

service Engines {
	rpc UpdateEngine(UpdateEngineRq) returns (UpdateEngineRs) {
		option (google.api.http) = {
			put: "/api/v1/Engines/UpdateEngine";
		};
	}
}

message EngineDto {
	string id = 1;
	int32 capacity = 2;
	int32 fuelQuantity = 3;
	int32 engineType = 4;
}

message VehicleDto {
	string id = 1;
	string name = 2;
	EngineDto engine = 3;
}

message CreateVehicleRq {
	string name = 1;
	int32 engineType = 2;
}

message CreateVehicleRs {
	bool success = 1;
	string error = 2;
}

message GetVehicleRq {
	string id = 1;
}

message GetVehicleRs {
	bool success = 1;
	string error = 2;
	optional VehicleDto vehicle = 3;
}

message GetAllVehiclesRq {
}

message GetAllVehiclesRs {
	bool success = 1;
	string error = 2;
	repeated VehicleDto vehicles = 3;
}

message DeleteVehicleRq {
	string id = 1;
}

message DeleteVehicleRs {
	bool success = 1;
	string error = 2;
}

message UpdateEngineRq {
	string id = 1;
	int32 capacity = 2;
	int32 fuelQuantity = 3;
	int32 engineType = 4;
}

message UpdateEngineRs {
	bool success = 1;
	string error = 2;
}