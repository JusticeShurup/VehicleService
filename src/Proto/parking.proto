syntax = "proto3";

option csharp_namespace = "ProtosContract";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "google/api/annotations.proto";

package parking;

service Parking {
	rpc CreateParking(CreateParkingRq) returns (CreateParkingRs) {
		option (google.api.http) = {
			post: "/api/v1/Parking/CreateParking"
		};
	}
	rpc ParkVehicle(ParkVehicleRq) returns (ParkVehicleRs) {
		option (google.api.http) = {
			put: "/api/v1/Parking/ParkVehicle" 
		};
	}
	rpc TakeVehicle(TakeVehicleRq) returns (TakeVehicleRs) {
		option (google.api.http) = {
			put: "/api/v1/Parking/TakeVehicle"
		};
	}
	rpc GetParking(GetParkingRq) returns (GetParkingRs) {
		option (google.api.http) = {
			get: "/api/v1/Parking/GetParking/{id}"
		};
	}
	rpc GetAllParkings(GetAllParkingsRq) returns (GetAllParkingsRs) {
		option (google.api.http) = {
			get: "/api/v1/Parking/GetParkings"
		};
	}
	rpc DeleteParking(DeleteParkingRq) returns (DeleteParkingRs) {
		option (google.api.http) = {
			delete: "/api/v1/Parking/DeleteParking"
		};
	}

	rpc GetAllParkingPlaces (GetAllParkingPlacesRq) returns (GetAllParkingPlacesRs) {
		option (google.api.http) = {
			get: "/api/v1/Parking/GetAllParkingPlaces"
		};
	}

	rpc UpdateParkingPlace (UpdateParkingPlaceRq) returns (UpdateParkingPlaceRs) {
		option (google.api.http) = {
			put: "/api/v1/Parking/UpdateParkingPlace"
		};
	}
}

service Subscriptions {
	rpc GetAllSubscriptions(GetAllSubscriptionsRq) returns (GetAllSubscriptionsRs) {
		option (google.api.http) = {
			get: "/api/v1/Subscription/GetSubscriptions"
		};
	}

	rpc GetVehicleSubcriptionHistory(GetVehicleSubscriptionHistoryRq) returns (GetVehicleSubscriptionHistoryRs) {
		option (google.api.http) = {
			get: "/api/v1/Subscription/GetVehicleSubscriptionHistory/{vehicleId}"
		};
	}
}

message ParkingDto {
	string id = 1;
	int32 floorCount = 2;
	int32 placesPerFloor = 3;
	string address = 4;
}

message ParkingPlaceDto {
	string id = 1;
	int32 floor = 2;
	ParkingDto parking = 3;
	google.protobuf.StringValue vehicleId = 4;
	bool isWithElectricityCharge = 5;
}

message SubscriptionDto {
	string id = 1;
	ParkingPlaceDto parkingPlace = 2;
	string vehicleId = 3;
	google.protobuf.Timestamp parkingStartDate = 4;
	google.protobuf.Timestamp parkingEndDate = 5;
	bool isActive = 6;
}

message CreateParkingRq {
	int32 floorCount = 1; 
	int32 placesPerFloor = 2; 
	string address = 3;
}

message CreateParkingRs {
	bool success = 1;
	string Error = 2;
}

message ParkVehicleRq {
	string vehicleId = 1;
	string parkingId = 2;
}

message ParkVehicleRs {
	bool success = 1;
	string error = 2;
}

message TakeVehicleRq {
	string vehicleId = 1;
}

message TakeVehicleRs {
	bool success = 1;
	string error = 2;
}

message GetAllParkingsRq {

}

message GetAllParkingsRs {
	bool success = 1;
	string error = 2;
	repeated ParkingDto parkings = 3;
}

message GetParkingRq {
	string id = 1;
}

message GetParkingRs {
	bool success = 1;
	string error = 2;
	optional ParkingDto parking = 3;
}

message DeleteParkingRq {
	string id = 1;
}

message DeleteParkingRs {
	bool success = 1;
	string error = 2;
}

message GetAllSubscriptionsRq {

}

message GetAllSubscriptionsRs {
	bool success = 1;
	string error = 2;
	repeated SubscriptionDto subscriptions = 3;
}

message GetVehicleSubscriptionHistoryRq {
	string vehicleId = 1;
}

message GetVehicleSubscriptionHistoryRs {
	bool success = 1;
	string error = 2;
	repeated SubscriptionDto subscriptions = 3;
}

message GetAllParkingPlacesRq {

}

message GetAllParkingPlacesRs {
	bool success = 1;
	string error = 2;
	repeated ParkingPlaceDto parkingPlaces = 3;
}

message UpdateParkingPlaceRq {
	string id = 1;
	bool isWithElectricityCharge = 2;
}

message UpdateParkingPlaceRs {
	bool success = 1;
	string error = 2;
}